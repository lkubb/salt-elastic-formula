# vim: ft=yaml
# yamllint disable rule:comments-indentation
---
elastic:
    # Auditbeat settings
  auditbeat:
    config: {}

    # This formula generates certificates for all programs.
    # Configure arguments to `x509.certificate_managed` here.
  certs:
      # It is highly recommended to centrally manage the CA with a CA server.
    ca_server: null
      # If your CA server signs certificates using an intermediate cert,
      # specify its chain here.
    intermediate: []
      # The root certificate is always required to instruct the components
      # to trust the issuing CA.
    root: ''
    signing_cert: null
    signing_policy: null
    signing_private_key: null
    signing_private_key_passphrase: null

    # Elasticsearch settings
  elasticsearch:
      # Configure authentication-related settings for this formula
    auth:
        # This bootstrap password will be set by this formula in order
        # to manage users/roles.
      bootstrap_password: bo0t_57R4P
        # List of roles that should be present in ES
      roles: []
        # Reset the password of the `elastic` user account to this string
        # after successful completion of the initial configuration
      root_password: null
        # Same as above, but as a hash (see ES docs) rather than plaintext
      root_password_hash: null
        # Same as root_password, but a value for ``salt["pillar.get"]`` to retrieve
        # the actual password.
      root_password_pillar: null
        # List of users that should be deleted.
        # Since they are tied to corresponding roles, this formula
        # deletes the default users by default and passes management to Vault.
      users_absent:
        - kibana
        - kibana_system
        - logstash_system
        - beats_system
        - apm_system
        - remote_monitoring_user
        # When the bootstrap password is reset, user/role management with this
        # formula ceases to work. If you configured a management role on your
        # Vault server, you can specify it here to use it instead.
        # Note that this should be better left to Vault.
      vault_management_role: null
      # Elasticsearch configuration, will be serialized as YAML
    config:
      cluster.initial_master_nodes: []
      cluster.name: elasticsearch
      http.port: 9200
      network.host: 0.0.0.0
      node.name: ''
      path.data: /var/lib/elasticsearch
      path.logs: /var/log/elasticsearch
      transport.port: 9300
      xpack.security.autoconfiguration.enabled: false
      xpack.security.enabled: true
      xpack.security.http.ssl:
        enabled: true
        keystore.path: certs/http.p12
      xpack.security.transport.ssl:
        certificate_authorities: certs/trust.pem
        enabled: true
        keystore.path: certs/transport.p12
        verification_mode: certificate
      # JVM configuration as a list of lines
    jvm_config: []
      # Settings related to the Vault database secret engine
    vault:
        # Name for the connection created/used by this formula
      connection_name: elasticsearch
        # Name of the mount where the database secret engine is used
      database_mount: database
      es_host: null
      # List of Vault roles that should be present and allowed
      # for this connection. Note that there are two types,
      # ones that reference ES roles, others that are completely defined
      # on the Vault side.
      # By default, this maps ES-inbuilt roles to Vault roles.
    vault_roles:
      - name: kibana_system
        roles:
          - kibana_system
      - name: logstash_system
        roles:
          - logstash_system
      - name: beats_system
        roles:
          - beats_system
      - name: apm_system
        roles:
          - apm_system
      - name: remote_monitoring_user
        roles:
          - remote_monitoring_collector
          - remote_monitoring_agent

    # Filebeat settings
  filebeat:
      # Will be serialized as YAML
    config: {}

    # Functionbeat settings
  functionbeat:
      # Will be serialized as YAML
    config: {}

    # Heartbeat settings
  heartbeat:
      # Will be serialized as YAML
    config: {}

    # Kibana settings
  kibana:
      # Authentication-related settings. If the password is unset,
      # will try to receive credentials from the configured Vault mount.
    auth:
      elasticsearch_password: null
      elasticsearch_username: kibana_system
      # Will be serialized as YAML
    config:
      elasticsearch.hosts:
        - http://localhost:9200
      elasticsearch.ssl.certificateAuthorities: /etc/kibana/certs/trust.pem
      logging:
        appenders:
          journal:
            layout:
              pattern: '[%date] [%level] [%logger] [%meta] %message'
              type: pattern
            type: console
      server.host: 0.0.0.0
      server.port: 5601
      server.ssl:
        # Note that Kibana configuration paths are not relative to
        # the configuration dir, you should specify these as absolute ones.
        certificate: /etc/kibana/certs/http.crt
        certificateAuthorities: /etc/kibana/certs/trust.pem
        enabled: true
        key: /etc/kibana/certs/http.key
        supportedProtocols:
          - TLSv1.3
      telemetry.optIn: false

    # Logstash settings
  logstash:
      # Will be serialized as YAML
    config: {}

    # Metricbeat settings
  metricbeat:
      # Will be serialized as YAML
    config: {}

    # Packetbeat settings
  packetbeat:
      # Will be serialized as YAML
    config: {}

    # Open relevant ports using firewall-cmd. Defaults to false.
  manage_firewalld: false
    # When applying clean states, do not try to prevent
    # accidental data loss
  remove_all_data_for_sure: false
    # Lock all component versions to this specific one.
    # While writing this, it might not make sense if multiple ones
    # run on the same minion @FIXME
  version: null
    # Lock all components to this major version.
    # This ensures the corresponding release channel repository is configured.
  version_major: '8'

  lookup:
    config:
      auditbeat: /etc/auditbeat
      elasticsearch: /etc/elasticsearch
      filebeat: /etc/filebeat
      functionbeat: /etc/functionbeat
      heartbeat: /etc/heartbeat
      kibana: /etc/kibana
      logstash: /etc/logstash
      metricbeat: /etc/metricbeat
      packetbeat: /etc/packetbeat
    es_tools: /usr/share/elasticsearch/bin
    group:
      auditbeat: auditbeat
      elasticsearch: elasticsearch
      filebeat: filebeat
      functionbeat: functionbeat
      heartbeat: heartbeat
      kibana: kibana
      logstash: logstash
      metricbeat: metricbeat
      packetbeat: packetbeat
    home:
      elasticsearch: /usr/share/elasticsearch
      kibana: /usr/share/kibana
    pkg:
      auditbeat: auditbeat
      elasticsearch: elasticsearch
      filebeat: filebeat
      functionbeat: functionbeat
      heartbeat: heartbeat
      kibana: kibana
      logstash: logstash
      metricbeat: metricbeat
      packetbeat: packetbeat
    service:
      auditbeat: auditbeat
      elasticsearch: elasticsearch
      filebeat: filebeat
      functionbeat: functionbeat
      heartbeat: heartbeat
      kibana: kibana
      logstash: logstash
      metricbeat: metricbeat
      packetbeat: packetbeat
    vault_certs: /opt/vault/tls

  tofs:
      # The files_switch key serves as a selector for alternative
      # directories under the formula files directory. See TOFS pattern
      # doc for more info.
      # Note: Any value not evaluated by `config.get` will be used literally.
      # This can be used to set custom paths, as many levels deep as required.
    files_switch:
      - any/path/can/be/used/here
      - id
      - roles
      - osfinger
      - os
      - os_family

      # All aspects of path/file resolution are customisable using the options below.
      # This is unnecessary in most cases; there are sensible defaults.
      # Default path: salt://< path_prefix >/< dirs.files >/< dirs.default >
      # I.e.: salt://elastic/files/default
      # path_prefix: template_alt
      # dirs:
      #   files: files_alt
      #   default: default_alt
      # The entries under `source_files` are prepended to the default source files
      # given for the state
    source_files:
      Elastic configuration is managed:
        - 'example_alt.tmpl'
        - 'example_alt.tmpl.jinja'
